{"version":3,"file":"static/js/971.87f8f635.chunk.js","mappings":"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","sources":["apis/Pet.js","components/AddPet.js","components/UserPetSection.js"],"sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const AddPetAPI = async (pet) => {\r\n  return await Axios.post(\"/pet\", pet);\r\n};\r\n\r\nexport const GetPetByIdAPI = async (petId) => {\r\n  return await Axios.get(`/pet/${petId}`);\r\n};\r\n\r\nexport const GetPetsByOwnerIdAPI = async (ownerId) => {\r\n  return await Axios.get(`/pet/by_owner/${ownerId}`);\r\n};\r\n\r\nexport const GetPetsByAvgReviewsAPI = async (locationArray, mateStatus, petId) => {\r\n  return await Axios.post(\r\n    \"/pet/get/review\",\r\n    { locationArray, petId },\r\n    { params: { mateStatus } }\r\n  );\r\n};\r\n\r\nexport const UpdatePetByIdAPI = async (petId, pet) => {\r\n  return await Axios.put(`/pet/${petId}`, pet);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AddPetAPI } from \"../apis/Pet\";\r\nimport \"../css/IndividualPage.css\";\r\nimport \"../css/AllPage.css\";\r\n\r\nconst AddPet = (props) => {\r\n  const { user, userPetList, setUserPetList } = props;\r\n  const [pet, setPet] = useState({ animalType: \"Dog\", location: \"New Delhi\" });\r\n  const [updateMessage, setUpdateMessage] = useState({});\r\n\r\n  useEffect(() => {\r\n    document.title = \"Add Pet | Philozooic\";\r\n  }, []);\r\n\r\n  const isEmpty = (val) => {\r\n    return val === undefined || val == null || val.length <= 0 ? true : false;\r\n  };\r\n\r\n  const onSubmitClick = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      isEmpty(pet.name) ||\r\n      isEmpty(pet.medicalHistory) ||\r\n      isEmpty(pet.breed) ||\r\n      isEmpty(pet.picturePath) ||\r\n      isEmpty(pet.mateStatus) ||\r\n      isEmpty(pet.gender) ||\r\n      isEmpty(pet.age)\r\n    ) {\r\n      setUpdateMessage({ success: false, message: \"Please fill all fields.\" });\r\n    } else {\r\n      await AddPetAPI({ ...pet, ownerId: user.userId, age: Number(pet.age) })\r\n        .then(({ data: addedPet }) => {\r\n          setUserPetList([...userPetList, addedPet]);\r\n          setUpdateMessage({\r\n            success: true,\r\n            message: \"Your new pet was successfully added.\",\r\n          });\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  };\r\n\r\n  let cityArray = [\r\n    \"New Delhi\",\r\n    \"Kolkata\",\r\n    \"Bengaluru\",\r\n    \"Pune\",\r\n    \"Mumbai\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Indore\",\r\n    \"Patna\",\r\n    \"Ranchi\",\r\n    \"Lucknow\",\r\n    \"Prayagraj\",\r\n    \"Ahmedabad\",\r\n    \"Agra\",\r\n    \"Kanpur\",\r\n    \"Jamshedpur\",\r\n    \"Srinagar\",\r\n    \"Gandhinagar\",\r\n    \"Thiruvananthapuram\",\r\n  ];\r\n\r\n  const renderCityOptions = () => {\r\n    let array = [];\r\n    for (let i = 0; i < cityArray.length; i++) {\r\n      array.push(\r\n        <option key={i} value={cityArray[i]}>\r\n          {cityArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div className={\"section\"}>\r\n      <h4 className={\"pet-welcome-message\"}>\r\n        Tell your pet, we said hi &#128075;&#127997;\r\n      </h4>\r\n      <div uk-grid={\"\"} className={\"pet-card individual-grid\"}>\r\n        <div className={\"uk-width-2-5@l\"}>\r\n          <h4>Choose Image:</h4>\r\n          <div\r\n            className={\"uk-position-relative uk-visible-toggle uk-light\"}\r\n            tabIndex={\"-1\"}\r\n            uk-slider={\"center: true\"}\r\n          >\r\n            <ul className={\"uk-slider-items uk-grid\"}>\r\n              {(() => {\r\n                let array = [];\r\n                for (let i = 0; i < 12; i++) {\r\n                  array.push(\r\n                    <li key={i} className={\"uk-width-3-4\"}>\r\n                      <div className={\"uk-panel\"}>\r\n                        <img\r\n                          className={\r\n                            pet.picturePath === `pet-${i + 1}.jpg` &&\r\n                            \"pet-image\"\r\n                          }\r\n                          src={`/pet-${i + 1}.jpg`}\r\n                          alt={\"Pet\"}\r\n                          onClick={(e) =>\r\n                            setPet({ ...pet, picturePath: `pet-${i + 1}.jpg` })\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                }\r\n                return array;\r\n              })()}\r\n            </ul>\r\n            <div\r\n              className={\"uk-position-center-left uk-position-small uk-hidden-hover\"}\r\n              uk-slidenav-previous={\"\"}\r\n              uk-slider-item=\"previous\"\r\n            />\r\n            <diva\r\n              className={\"uk-position-center-right uk-position-small uk-hidden-hover\"}\r\n              uk-slidenav-next={\"\"}\r\n              uk-slider-item=\"next\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={\"uk-width-3-5@l\"}>\r\n          <form>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-form-label\"}>Pet Name:</label>\r\n              <div className={\"uk-form-controls\"}>\r\n                <input\r\n                  className={\"uk-input\"}\r\n                  type={\"text\"}\r\n                  placeholder={\"Pet Name\"}\r\n                  value={pet.name}\r\n                  onChange={(e) => setPet({ ...pet, name: e.target.value })}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-form-label\"}>\r\n                Which animal is your pet?\r\n              </label>\r\n              <div className={\"uk-form-controls\"}>\r\n                <select\r\n                  className={\"uk-select\"}\r\n                  onChange={(e) =>\r\n                    setPet({ ...pet, animalType: e.target.value })\r\n                  }\r\n                  value={pet.animalType}\r\n                >\r\n                  <option value={\"Dog\"}>Dog</option>\r\n                  <option value={\"Cat\"}>Cat</option>\r\n                  <option value={\"Bird\"}>Bird</option>\r\n                  <option value={\"Rabbit\"}>Rabbit</option>\r\n                  <option value={\"Other\"}>Other</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-form-label\"}>Pet Breed:</label>\r\n              <div className={\"uk-form-controls\"}>\r\n                <input\r\n                  className={\"uk-input\"}\r\n                  type={\"text\"}\r\n                  placeholder={\"Pet Breed\"}\r\n                  value={pet.breed}\r\n                  onChange={(e) => setPet({ ...pet, breed: e.target.value })}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-form-label\"}>Medical History:</label>\r\n              <div className={\"uk-form-controls\"}>\r\n                <textarea\r\n                  className={\"uk-textarea\"}\r\n                  rows={\"5\"}\r\n                  placeholder={\"Medical History\"}\r\n                  value={pet.medicalHistory}\r\n                  onChange={(e) =>\r\n                    setPet({ ...pet, medicalHistory: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-form-label\"}>Location:</label>\r\n              <div className={\"uk-form-controls\"}>\r\n                <select\r\n                  className={\"uk-select\"}\r\n                  value={pet.location}\r\n                  onChange={(e) => setPet({ ...pet, location: e.target.value })}\r\n                >\r\n                  {renderCityOptions()}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <label className={\"uk-class-label\"}>\r\n                Age <small>(in years)</small>:\r\n              </label>\r\n              <input\r\n                className={\"uk-input\"}\r\n                type={\"number\"}\r\n                value={pet.age}\r\n                onChange={(e) => setPet({ ...pet, age: e.target.value })}\r\n              />\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <div className={\"uk-form-label\"}>Is ready to mate/date?</div>\r\n              <div\r\n                className={\"uk-form-controls\"}\r\n                onClick={(e) => setPet({ ...pet, mateStatus: e.target.value })}\r\n              >\r\n                <label>\r\n                  <input\r\n                    className={\"uk-radio\"}\r\n                    type={\"radio\"}\r\n                    name={\"mateStatus\"}\r\n                    value={true}\r\n                  />\r\n                  {\" Yes\"}\r\n                </label>\r\n                <br />\r\n                <label>\r\n                  <input\r\n                    className={\"uk-radio\"}\r\n                    type={\"radio\"}\r\n                    name={\"mateStatus\"}\r\n                    value={false}\r\n                  />\r\n                  {\" No\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-margin\"}>\r\n              <div className={\"uk-form-label\"}>Gender:</div>\r\n              <div\r\n                className={\"uk-form-controls\"}\r\n                onClick={(e) => setPet({ ...pet, gender: e.target.value })}\r\n              >\r\n                <label>\r\n                  <input\r\n                    className={\"uk-radio\"}\r\n                    type={\"radio\"}\r\n                    name={\"gender\"}\r\n                    value={\"Male\"}\r\n                  />\r\n                  {\" Male\"}\r\n                </label>\r\n                <br />\r\n                <label>\r\n                  <input\r\n                    className={\"uk-radio\"}\r\n                    type={\"radio\"}\r\n                    name={\"gender\"}\r\n                    value={\"Female\"}\r\n                  />\r\n                  {\" Female\"}\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {Object.keys(updateMessage).length > 0 &&\r\n              (!updateMessage.success ? (\r\n                <div className={\"uk-alert-danger\"} uk-alert={\"\"} key={1}>\r\n                  <p>{updateMessage.message}</p>\r\n                </div>\r\n              ) : (\r\n                <div className={\"uk-alert-success\"} uk-alert={\"\"} key={2}>\r\n                  <p>{updateMessage.message}</p>\r\n                </div>\r\n              ))}\r\n            <div className={\"uk-margin\"}>\r\n              <button\r\n                className={\"submit-button\"}\r\n                onClick={(e) => onSubmitClick(e)}\r\n              >\r\n                Add Pet\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPet;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GetPetsByOwnerIdAPI } from \"../apis/Pet\";\r\nimport \"../css/AllPage.css\";\r\nimport AddPet from \"./AddPet\";\r\n\r\nconst UserPetSection = (props) => {\r\n  const { user } = props;\r\n  const [fetchMessage, setFetchMessage] = useState({});\r\n  const [selectedPage, setSelectedPage] = useState(\"ALL\");\r\n  const [userPetList, setUserPetList] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user === null) {\r\n      history.push(\"/\");\r\n    } else {\r\n      document.title = `${user.name.split(\" \")[0]}'s Pets | Philozooic`;\r\n      const fetchPetsByOwnerId = async () => {\r\n        await GetPetsByOwnerIdAPI(user.userId)\r\n          .then(({ data: foundPets }) => {\r\n            setUserPetList(foundPets);\r\n            setFetchMessage({\r\n              success: true,\r\n              message: \"Pets successfully fetched.\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 404) {\r\n              setFetchMessage({\r\n                success: false,\r\n                message: \"You haven't added any pets yet.\",\r\n              });\r\n            }\r\n          });\r\n      };\r\n      fetchPetsByOwnerId();\r\n    }\r\n  }, [history, user]);\r\n\r\n  const renderContent = () => {\r\n    if (selectedPage === \"ADD\") {\r\n      return (\r\n        <AddPet\r\n          user={user}\r\n          userPetList={userPetList}\r\n          setUserPetList={setUserPetList}\r\n        />\r\n      );\r\n    } else {\r\n      if (Object.keys(fetchMessage).length === 0) {\r\n        return <span uk-spinner={\"ratio: 4.5\"} />;\r\n      } else if (selectedPage === \"ALL\" && !fetchMessage.success) {\r\n        return (\r\n          <div className={\"section\"}>\r\n            <p className={\"not-found-message\"}>{fetchMessage.message}</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className={\"section\"}>\r\n            <div className={\"uk-child-width-1-4@l pet-card all-page-grid\"} uk-grid={\"\"}>\r\n              {(() => {\r\n                return userPetList.map((pet) => {\r\n                  return (\r\n                    <div key={pet.petId}>\r\n                      <div className={\"uk-card uk-card-default\"}>\r\n                        <div className={\"uk-card-media-top\"}>\r\n                          <img\r\n                            src={`/${pet.picturePath}`}\r\n                            alt={`${pet.name}`}\r\n                            title={`${pet.name}`}\r\n                          />\r\n                        </div>\r\n                        <div className={\"uk-card-body card body\"}>\r\n                          <h3 className={\"uk-card-title name\"}>{pet.name}</h3>\r\n                          <h6 className={\"miscellaneous-info\"}>\r\n                            Animal: {pet.animalType}\r\n                          </h6>\r\n                          <h6 className={\"miscellaneous-info\"}>\r\n                            Breed: {pet.breed}\r\n                          </h6>\r\n                          <br />\r\n                          <div className={\"button-box\"}>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/pet/${pet.petId}/${user.userId}`,\r\n                                state: {\r\n                                  pet: pet,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <button className={\"section-button\"}>Edit</button>\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                });\r\n              })()}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"uk-margin-medium-top\"}>\r\n      <ul className={\"uk-flex-center\"} uk-tab={\"\"}>\r\n        <li>\r\n          <legend\r\n            className={selectedPage === \"ALL\" ? \"tab active\" : \"tab\"}\r\n            onClick={() => setSelectedPage(\"ALL\")}\r\n          >\r\n            Your Pets\r\n          </legend>\r\n        </li>\r\n        <li>\r\n          <legend\r\n            className={selectedPage === `ADD` ? \"tab active\" : \"tab\"}\r\n            onClick={() => setSelectedPage(\"ADD\")}\r\n          >\r\n            Add Pet\r\n          </legend>\r\n        </li>\r\n      </ul>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPetSection;\r\n"],"names":["AddPetAPI","async","Axios","post","pet","GetPetByIdAPI","get","concat","petId","GetPetsByOwnerIdAPI","ownerId","GetPetsByAvgReviewsAPI","locationArray","mateStatus","params","UpdatePetByIdAPI","put","props","user","userPetList","setUserPetList","setPet","useState","animalType","location","updateMessage","setUpdateMessage","useEffect","document","title","isEmpty","val","undefined","length","cityArray","_jsxs","className","children","_jsx","tabIndex","array","i","push","picturePath","src","alt","onClick","e","type","placeholder","value","name","onChange","target","breed","rows","medicalHistory","renderCityOptions","age","gender","Object","keys","success","message","preventDefault","userId","Number","then","_ref","data","addedPet","catch","error","console","onSubmitClick","fetchMessage","setFetchMessage","selectedPage","setSelectedPage","history","useHistory","split","foundPets","response","status","fetchPetsByOwnerId","AddPet","map","Link","to","pathname","state"],"sourceRoot":""}