{"version":3,"file":"static/js/819.855d2cd2.chunk.js","mappings":"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","sources":["apis/Pet.js","components/EditPetPage.js"],"sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const AddPetAPI = async (pet) => {\r\n  return await Axios.post(\"/pet\", pet);\r\n};\r\n\r\nexport const GetPetByIdAPI = async (petId) => {\r\n  return await Axios.get(`/pet/${petId}`);\r\n};\r\n\r\nexport const GetPetsByOwnerIdAPI = async (ownerId) => {\r\n  return await Axios.get(`/pet/by_owner/${ownerId}`);\r\n};\r\n\r\nexport const GetPetsByAvgReviewsAPI = async (locationArray, mateStatus, petId) => {\r\n  return await Axios.post(\r\n    \"/pet/get/review\",\r\n    { locationArray, petId },\r\n    { params: { mateStatus } }\r\n  );\r\n};\r\n\r\nexport const UpdatePetByIdAPI = async (petId, pet) => {\r\n  return await Axios.put(`/pet/${petId}`, pet);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { GetPetByIdAPI, UpdatePetByIdAPI } from \"../apis/Pet\";\r\nimport \"../css/IndividualPage.css\";\r\n\r\nconst EditReactPage = (props) => {\r\n  const { user } = props;\r\n  const [userPet, setUserPet] = useState({});\r\n  const [userPetAfterUpdate, setUserPetAfterUpdate] = useState({});\r\n  const [fetchMessage, setFetchMessage] = useState({});\r\n  const [updateMessage, setUpdateMessage] = useState({});\r\n\r\n  const history = useHistory();\r\n  const { userId: pathUserId, petId: pathPetId } = useParams();\r\n\r\n  const isEmpty = (val) => {\r\n    return val === undefined || val == null || val.length <= 0 ? true : false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user === null || pathUserId !== user.userId) {\r\n      history.push(\"/\");\r\n    } else {\r\n      const fetchPet = async () => {\r\n        await GetPetByIdAPI(pathPetId)\r\n          .then(({ data: foundPet }) => {\r\n            setUserPet(foundPet);\r\n            setUserPetAfterUpdate(foundPet);\r\n            setFetchMessage({\r\n              success: true,\r\n              message: `Pet with ID: ${pathPetId} was successfully found!`,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.stats === 404) {\r\n              setFetchMessage({\r\n                success: false,\r\n                message: `Pet with ID: ${pathPetId} was not found.`,\r\n              });\r\n            }\r\n          });\r\n      };\r\n      fetchPet();\r\n    }\r\n  }, [history, pathPetId, pathUserId, user]);\r\n\r\n  const onSubmitClick = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      isEmpty(userPetAfterUpdate.name) ||\r\n      isEmpty(userPetAfterUpdate.medicalHistory) ||\r\n      isEmpty(userPetAfterUpdate.breed) ||\r\n      isEmpty(userPetAfterUpdate.picturePath) ||\r\n      isEmpty(userPetAfterUpdate.mateStatus) ||\r\n      isEmpty(userPetAfterUpdate.gender) ||\r\n      isEmpty(userPetAfterUpdate.age)\r\n    ) {\r\n      setUpdateMessage({ success: false, message: \"Please fill all fields.\" });\r\n    } else {\r\n      await UpdatePetByIdAPI(userPet.petId, {\r\n        ...userPetAfterUpdate,\r\n        age: Number(userPetAfterUpdate.age),\r\n      })\r\n        .then(({ data: updatedPet }) => {\r\n          console.info(updatedPet);\r\n          setUserPet(updatedPet);\r\n          setUserPetAfterUpdate(updatedPet);\r\n          setUpdateMessage({\r\n            success: true,\r\n            message: \"Your pet was successfully updated.\",\r\n          });\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  };\r\n\r\n  let cityArray = [\r\n    \"New Delhi\",\r\n    \"Kolkata\",\r\n    \"Bengaluru\",\r\n    \"Pune\",\r\n    \"Mumbai\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Indore\",\r\n    \"Patna\",\r\n    \"Ranchi\",\r\n    \"Lucknow\",\r\n    \"Prayagraj\",\r\n    \"Ahmedabad\",\r\n    \"Agra\",\r\n    \"Kanpur\",\r\n    \"Jamshedpur\",\r\n    \"Srinagar\",\r\n    \"Gandhinagar\",\r\n    \"Thiruvananthapuram\",\r\n  ];\r\n\r\n  const renderCityOptions = () => {\r\n    let array = [];\r\n    for (let i = 0; i < cityArray.length; i++) {\r\n      array.push(\r\n        <option key={i} value={cityArray[i]}>\r\n          {cityArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const renderEditPage = () => {\r\n    return (\r\n      <>\r\n        <div className={\"uk-section hero-section\"}>\r\n          <div className={\"uk-container\"}>\r\n            <h1 className={\"hero-heading-text\"}>{userPet.name}</h1>\r\n          </div>\r\n        </div>\r\n        <div className={\"section\"}>\r\n          <div className={\"pet-card individual-grid\"} uk-grid={\"\"}>\r\n            <div className={\"uk-width-2-5@l\"}>\r\n              <div className={\"pet-image-box\"}>\r\n                <img\r\n                  src={`/${userPetAfterUpdate.picturePath}`}\r\n                  alt={userPetAfterUpdate.name}\r\n                />\r\n              </div>\r\n              <div\r\n                className={\"uk-position-relative uk-visible-toggle uk-light\"}\r\n                tabIndex={\"-1\"}\r\n                uk-slider={\"center: true\"}\r\n              >\r\n                <ul className={\"uk-slider-items uk-grid\"}>\r\n                  {(() => {\r\n                    let array = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                      array.push(\r\n                        <li key={i} className={\"uk-width-3-4\"}>\r\n                          <div className={\"uk-panel\"}>\r\n                            <img\r\n                              className={\r\n                                userPetAfterUpdate.picturePath ===\r\n                                  `pet-${i + 1}.jpg` && \"pet-image\"\r\n                              }\r\n                              src={`/pet-${i + 1}.jpg`}\r\n                              alt={\"Pet\"}\r\n                              onClick={(e) =>\r\n                                setUserPetAfterUpdate({\r\n                                  ...userPetAfterUpdate,\r\n                                  picturePath: `pet-${i + 1}.jpg`,\r\n                                })\r\n                              }\r\n                            />\r\n                          </div>\r\n                        </li>\r\n                      );\r\n                    }\r\n                    return array;\r\n                  })()}\r\n                </ul>\r\n                <div\r\n                  className={\"uk-position-center-left uk-position-small uk-hidden-hover\"}\r\n                  uk-slidenav-previous={\"\"}\r\n                  uk-slider-item={\"previous\"}\r\n                />\r\n                <diva\r\n                  className={\"uk-position-center-right uk-position-small uk-hidden-hover\"}\r\n                  uk-slidenav-next={\"\"}\r\n                  uk-slider-item={\"next\"}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={\"uk-width-3-5@l\"}>\r\n              <form>\r\n                <div className={\"uk-margin\"}>\r\n                  <label className={\"uk-form-label\"}>Pet Name:</label>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <input\r\n                      className={\"uk-input\"}\r\n                      type={\"text\"}\r\n                      placeholder={\"Pet Name\"}\r\n                      value={userPetAfterUpdate.name}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          name: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <label className={\"uk-form-label\"}>\r\n                    Which animal is your pet?\r\n                  </label>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <select\r\n                      className={\"uk-select\"}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          animalType: e.target.value,\r\n                        })\r\n                      }\r\n                      value={userPetAfterUpdate.animalType}\r\n                    >\r\n                      <option value={\"Dog\"}>Dog</option>\r\n                      <option value={\"Cat\"}>Cat</option>\r\n                      <option value={\"Bird\"}>Bird</option>\r\n                      <option value={\"Rabbit\"}>Rabbit</option>\r\n                      <option value={\"Other\"}>Other</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <label className={\"uk-form-label\"}>Pet Breed:</label>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <input\r\n                      className={\"uk-input\"}\r\n                      type={\"text\"}\r\n                      placeholder={\"Pet Breed\"}\r\n                      value={userPetAfterUpdate.breed}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          breed: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <label className={\"uk-form-label\"}>Medical History:</label>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <textarea\r\n                      className={\"uk-textarea\"}\r\n                      rows={\"5\"}\r\n                      placeholder={\"Medical History\"}\r\n                      value={userPetAfterUpdate.medicalHistory}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          medicalHistory: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className={\"uk-margin\"}>\r\n                    <label className={\"uk-class-label\"}>\r\n                      Age <small>(in years)</small>:\r\n                    </label>\r\n                    <input\r\n                      className={\"uk-input\"}\r\n                      type={\"number\"}\r\n                      value={userPetAfterUpdate.age}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          age: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <label className={\"uk-form-label\"}>Location:</label>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <select\r\n                      className={\"uk-select\"}\r\n                      value={userPetAfterUpdate.location}\r\n                      onChange={(e) =>\r\n                        setUserPetAfterUpdate({\r\n                          ...userPetAfterUpdate,\r\n                          location: e.target.value,\r\n                        })\r\n                      }\r\n                    >\r\n                      {renderCityOptions()}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <div className={\"uk-form-label\"}>Is ready to mate/date?</div>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <label>\r\n                      <input\r\n                        className={\"uk-radio\"}\r\n                        type={\"radio\"}\r\n                        name={\"mateStatus\"}\r\n                        value={true}\r\n                        checked={userPetAfterUpdate.mateStatus === true}\r\n                        onChange={(e) =>\r\n                          setUserPetAfterUpdate({\r\n                            ...userPetAfterUpdate,\r\n                            mateStatus: true,\r\n                          })\r\n                        }\r\n                      />\r\n                      {\" Yes\"}\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                      <input\r\n                        className={\"uk-radio\"}\r\n                        type={\"radio\"}\r\n                        name={\"mateStatus\"}\r\n                        value={false}\r\n                        checked={userPetAfterUpdate.mateStatus === false}\r\n                        onChange={(e) =>\r\n                          setUserPetAfterUpdate({\r\n                            ...userPetAfterUpdate,\r\n                            mateStatus: false,\r\n                          })\r\n                        }\r\n                      />\r\n                      {\" No\"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <div className={\"uk-margin\"}>\r\n                  <div className={\"uk-form-label\"}>Gender:</div>\r\n                  <div className={\"uk-form-controls\"}>\r\n                    <label>\r\n                      <input\r\n                        className={\"uk-radio\"}\r\n                        type={\"radio\"}\r\n                        name={\"gender\"}\r\n                        value={\"Male\"}\r\n                        checked={userPetAfterUpdate.gender === \"Male\"}\r\n                        onChange={(e) =>\r\n                          setUserPetAfterUpdate({\r\n                            ...userPetAfterUpdate,\r\n                            gender: \"Male\",\r\n                          })\r\n                        }\r\n                      />\r\n                      {\" Male\"}\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                      <input\r\n                        className={\"uk-radio\"}\r\n                        type={\"radio\"}\r\n                        name={\"gender\"}\r\n                        value={\"Female\"}\r\n                        checked={userPetAfterUpdate.gender === \"Female\"}\r\n                        onChange={(e) =>\r\n                          setUserPetAfterUpdate({\r\n                            ...userPetAfterUpdate,\r\n                            gender: \"Female\",\r\n                          })\r\n                        }\r\n                      />\r\n                      {\" Female\"}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                {Object.keys(updateMessage).length > 0 &&\r\n                  (!updateMessage.success ? (\r\n                    <div className={\"uk-alert-danger\"} uk-alert={\"\"} key={1}>\r\n                      <p>{updateMessage.message}</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className={\"uk-alert-success\"} uk-alert={\"\"} key={2}>\r\n                      <p>{updateMessage.message}</p>\r\n                    </div>\r\n                  ))}\r\n                <div className={\"uk-margin\"}>\r\n                  <button\r\n                    className={\"submit-button\"}\r\n                    onClick={(e) => onSubmitClick(e)}\r\n                  >\r\n                    Update Pet\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (\r\n      Object.keys(userPet).length > 0 &&\r\n      Object.keys(userPetAfterUpdate).length > 0 &&\r\n      fetchMessage.success\r\n    ) {\r\n      return renderEditPage();\r\n    } else if (Object.keys(fetchMessage).length > 0 && !fetchMessage.success) {\r\n      return <h1>Not found</h1>;\r\n    } else {\r\n      return <span uk-spinner={\"ratio: 4.5\"} />;\r\n    }\r\n  };\r\n\r\n  return renderContent();\r\n};\r\n\r\nexport default EditReactPage;\r\n"],"names":["AddPetAPI","async","Axios","post","pet","GetPetByIdAPI","get","concat","petId","GetPetsByOwnerIdAPI","ownerId","GetPetsByAvgReviewsAPI","locationArray","mateStatus","params","UpdatePetByIdAPI","put","props","user","userPet","setUserPet","useState","userPetAfterUpdate","setUserPetAfterUpdate","fetchMessage","setFetchMessage","updateMessage","setUpdateMessage","history","useHistory","userId","pathUserId","pathPetId","useParams","isEmpty","val","undefined","length","useEffect","push","then","_ref","data","foundPet","success","message","catch","error","response","stats","fetchPet","cityArray","renderCityOptions","array","i","_jsx","value","children","renderEditPage","_jsxs","_Fragment","className","name","src","picturePath","alt","tabIndex","onClick","e","type","placeholder","onChange","target","animalType","breed","rows","medicalHistory","age","location","checked","gender","Object","keys","preventDefault","Number","_ref2","updatedPet","console","info","onSubmitClick"],"sourceRoot":""}