{"version":3,"file":"static/js/738.bbfcc595.chunk.js","mappings":"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","sources":["apis/Auth.js","apis/Caretaker.js","apis/Doctor.js","apis/NGO.js","apis/User.js","components/DoctorRegistration.js","components/CaretakerRegistration.js","components/NGORegistration.js","components/SignUp.js"],"sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const LoginAPI = async (email, password) => {\r\n  return await Axios.post(\"/login\", {\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nexport const SignUpAPI = async (user) => {\r\n  return await Axios.post(\"/signup\", user);\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const AddCaretakerAPI = async (caretaker) => {\r\n  return await Axios.post(\"/caretaker\", caretaker);\r\n};\r\n\r\nexport const GetCaretakerByIdAPI = async (caretakerId) => {\r\n  return await Axios.get(`/caretaker/${caretakerId}`);\r\n};\r\n\r\nexport const GetCaretakersByAvgReview = async (locationArray) => {\r\n  return await Axios.post(\"/caretaker/get/review\", { locationArray });\r\n};\r\n\r\nexport const UpdateCaretakerByIdAPI = async (\r\n  caretakerId,\r\n  caretakerAfterUpdate\r\n) => {\r\n  return await Axios.put(`/caretaker/${caretakerId}`, caretakerAfterUpdate);\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const AddDoctorAPI = async (doctor) => {\r\n  return await Axios.post(\"/doctor\", doctor);\r\n};\r\n\r\nexport const GetAllDoctors = async () => {\r\n  return await Axios.get(\"/doctor/get/all\");\r\n};\r\n\r\nexport const GetDoctorById = async (doctorId) => {\r\n  return await Axios.get(`/doctor/${doctorId}`);\r\n};\r\n\r\nexport const GetDoctorsByAvgReview = async (locationArray, doctorId) => {\r\n  return await Axios.post(\"/doctor/get/review\", { locationArray, doctorId });\r\n};\r\n\r\nexport const UpdateDoctorById = async (doctorId, doctorAfterUpdate) => {\r\n  return await Axios.put(`/doctor/${doctorId}`, doctorAfterUpdate);\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const AddNGOAPI = async (ngo) => {\r\n  return await Axios.post(\"/ngo\", ngo);\r\n};\r\n\r\nexport const GetNGOByIdAPI = async (ngoId) => {\r\n  return await Axios.get(`/ngo/${ngoId}`);\r\n};\r\n\r\nexport const GetNGOsByAvgReviewAPI = async (locationArray, ngoId) => {\r\n  return await Axios.post(\"/ngo/get/review\", { locationArray, ngoId });\r\n};\r\n\r\nexport const UpdateNGOByIdAPI = async (ngoId, ngoAfterUpdate) => {\r\n  return await Axios.put(`/ngo/${ngoId}`, ngoAfterUpdate);\r\n};\r\n","import Axios from \"axios\";\r\n\r\nexport const GetUserById = async (userId) => {\r\n  return await Axios.get(`/user/${userId}`);\r\n};\r\n\r\nexport const GetUserByTargetUserIdAPI = async (targetUserId) => {\r\n  return await Axios.get(`/user-target/${targetUserId}`);\r\n};\r\n\r\nexport const UpdateUserById = async (userId, userAfterUpdate, token) => {\r\n  return await Axios.put(`/user/${userId}`, {\r\n    user: userAfterUpdate,\r\n    token,\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AddDoctorAPI } from \"../apis/Doctor\";\r\nimport { UpdateUserById } from \"../apis/User\";\r\n\r\nconst DoctorRegistrationForm = (props) => {\r\n  const { user, setUser, setFormType } = props;\r\n  let userNameArray = user === null ? null : user.name.split(\" \");\r\n\r\n  const [firstName, setFirstName] = useState(\r\n    userNameArray === null ? \"\" : userNameArray[0]\r\n  );\r\n  const [lastName, setLastName] = useState(\r\n    userNameArray === null ? \"\" : userNameArray[1]\r\n  );\r\n  const [location, setLocation] = useState(\"\");\r\n  const [specialty, setSpecialty] = useState(\"\");\r\n  const [charge, setCharge] = useState(\"\");\r\n  const [chargeDuration, setChargeDuration] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [picturePath, setPicturePath] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  let cityArray = [\r\n    \"New Delhi\",\r\n    \"Kolkata\",\r\n    \"Bengaluru\",\r\n    \"Pune\",\r\n    \"Mumbai\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Indore\",\r\n    \"Patna\",\r\n    \"Ranchi\",\r\n    \"Lucknow\",\r\n    \"Prayagraj\",\r\n    \"Ahmedabad\",\r\n    \"Agra\",\r\n    \"Kanpur\",\r\n    \"Jamshedpur\",\r\n    \"Srinagar\",\r\n    \"Gandhinagar\",\r\n    \"Thiruvananthapuram\",\r\n  ];\r\n\r\n  const handleSubmitClick = async (e) => {\r\n    if (\r\n      firstName === \"\" ||\r\n      lastName === \"\" ||\r\n      location === \"\" ||\r\n      specialty === \"\" ||\r\n      charge === \"\" ||\r\n      about === \"\" ||\r\n      picturePath === \"\" ||\r\n      address === \"\"\r\n    ) {\r\n      setErrorMessage(\"Please fill all required fields.\");\r\n    }\r\n    e.preventDefault();\r\n    let doctor = {\r\n      firstName,\r\n      lastName,\r\n      location,\r\n      specialty,\r\n      charge,\r\n      chargeDuration,\r\n      about,\r\n      picturePath,\r\n      address\r\n    };\r\n    let loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    await AddDoctorAPI(doctor)\r\n      .then(async ({ data: createdDoctor }) => {\r\n        loggedInUser = { ...loggedInUser, targetUser: createdDoctor };\r\n        await UpdateUserById(\r\n          user.userId,\r\n          {\r\n            ...user,\r\n            targetUser: \"Doctor\",\r\n            targetUserId: createdDoctor.doctorId,\r\n          },\r\n          loggedInUser.token\r\n        )\r\n          .then(({ data: updatedUser }) => {\r\n            loggedInUser = { ...loggedInUser, user: updatedUser };\r\n            setUser(updatedUser);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Could not update user!\", error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Could not create doctor\", error);\r\n      });\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderCityOptions = () => {\r\n    let array = [\r\n      <option key={-1} value={\"\"}>\r\n        Select your location\r\n      </option>,\r\n    ];\r\n    for (let i = 0; i < cityArray.length; i++) {\r\n      array.push(\r\n        <option key={i} value={cityArray[i]}>\r\n          {cityArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const renderDoctorImages = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 6; i++) {\r\n      array.push(\r\n        <div key={i}>\r\n          <img\r\n            src={`/dr-${i + 1}.jpg`}\r\n            alt={\"DR\"}\r\n            className={\r\n              picturePath === `dr-${i + 1}.jpg`\r\n                ? \"type-image selected\"\r\n                : \"type-image\"\r\n            }\r\n            onClick={(e) => setPicturePath(`dr-${i + 1}.jpg`)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"login-form\"}>\r\n        <h1 className={\"login-text\"}>Pets would love our new vet.</h1>\r\n        <h4 className={\"radio-select\"}>\r\n          Please provide your additional details:\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter First Name\"}\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter Last Name\"}\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea  uk-form-width-large\"}\r\n            rows={\"5\"}\r\n            placeholder={\"Your Address\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            value={address}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n          >\r\n            {renderCityOptions()}\r\n          </select>\r\n        </div>\r\n        <h4 className={\"radio-select\"}>Whats your Specialty?</h4>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setSpecialty(e.target.value)}\r\n            value={specialty}\r\n          >\r\n            <option value={\"Dogs\"}>Dogs</option>\r\n            <option value={\"Cats\"}>Cats</option>\r\n            <option value={\"Birds\"}>Birds</option>\r\n            <option value={\"Rabbits\"}>Rabbits</option>\r\n            <option value={\"Others\"}>Others</option>\r\n          </select>\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"number\"}\r\n            placeholder={\"Whats your charge?\"}\r\n            onChange={(e) => setCharge(e.target.value)}\r\n            value={charge}\r\n          />\r\n        </div>\r\n        <h4 className={\"radio-select\"}>Your charges are:</h4>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setChargeDuration(e.target.value)}\r\n            value={chargeDuration}\r\n          >\r\n            <option value={\"hr\"}>Hourly</option>\r\n            <option value={\"session\"}>Per Session</option>\r\n            <option value={\"week\"}>Weekly</option>\r\n            <option value={\"month\"}>Monthly</option>\r\n          </select>\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea  uk-form-width-large\"}\r\n            rows={\"5\"}\r\n            placeholder={\"About Yourself\"}\r\n            onChange={(e) => setAbout(e.target.value)}\r\n            value={about}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4 className={\"radio-select\"}>Choose your Image:</h4>\r\n          <div\r\n            className={\"uk-grid-match uk-child-width-expand@s uk-text-center\"}\r\n            uk-grid={\"\"}\r\n          >\r\n            {renderDoctorImages()}\r\n          </div>\r\n        </div>\r\n        <h4 className={\"signup-mssg\"}>\r\n          Changed your mind? {/* eslint-disable-next-line */}\r\n          <a className={\"signup-link\"} onClick={() => setFormType(\"User\")}>\r\n            Go Back\r\n          </a>\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <button\r\n            className={\"login-button\"}\r\n            onClick={(e) => handleSubmitClick(e)}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n        <h5 className={\"error-mssg\"}>{errorMessage}</h5>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistrationForm;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AddCaretakerAPI } from \"../apis/Caretaker\";\r\nimport { UpdateUserById } from \"../apis/User\";\r\n\r\nconst CaretakerRegistrationForm = (props) => {\r\n  const { user, setUser, setFormType } = props;\r\n\r\n  let userNameArray = user === null ? null : user.name.split(\" \");\r\n\r\n  const [firstName, setFirstName] = useState(\r\n    userNameArray === null ? \"\" : userNameArray[0]\r\n  );\r\n  const [lastName, setLastName] = useState(\r\n    userNameArray === null ? \"\" : userNameArray[1]\r\n  );\r\n  const [location, setLocation] = useState(\"\");\r\n  const [charge, setCharge] = useState(\"\");\r\n  const [chargeDuration, setChargeDuration] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [picturePath, setPicturePath] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  let cityArray = [\r\n    \"New Delhi\",\r\n    \"Kolkata\",\r\n    \"Bengaluru\",\r\n    \"Pune\",\r\n    \"Mumbai\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Indore\",\r\n    \"Patna\",\r\n    \"Ranchi\",\r\n    \"Lucknow\",\r\n    \"Prayagraj\",\r\n    \"Ahmedabad\",\r\n    \"Agra\",\r\n    \"Kanpur\",\r\n    \"Jamshedpur\",\r\n    \"Srinagar\",\r\n    \"Gandhinagar\",\r\n    \"Thiruvananthapuram\",\r\n  ];\r\n\r\n  const handleSubmitClick = async (e) => {\r\n    if (\r\n      firstName === \"\" ||\r\n      lastName === \"\" ||\r\n      location === \"\" ||\r\n      charge === \"\" ||\r\n      about === \"\" ||\r\n      picturePath === \"\" ||\r\n      address === \"\"\r\n    ) {\r\n      setErrorMessage(\"Please fill all required fields.\");\r\n    }\r\n    e.preventDefault();\r\n    let caretaker = {\r\n      firstName,\r\n      lastName,\r\n      location,\r\n      charge,\r\n      chargeDuration,\r\n      about,\r\n      picturePath,\r\n      address,\r\n    };\r\n    let loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    await AddCaretakerAPI(caretaker)\r\n      .then(async ({ data: createdCaretaker }) => {\r\n        loggedInUser = { ...loggedInUser, targetUser: createdCaretaker };\r\n        await UpdateUserById(\r\n          user.userId,\r\n          {\r\n            ...user,\r\n            targetUser: \"Caretaker\",\r\n            targetUserId: createdCaretaker.caretakerId,\r\n          },\r\n          loggedInUser.token\r\n        )\r\n          .then(({ data: updatedUser }) => {\r\n            loggedInUser = { ...loggedInUser, user: updatedUser };\r\n            setUser(updatedUser);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Could not update user!\", error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Could not create caretaker\", error);\r\n      });\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderCaretakerImages = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      array.push(\r\n        <div key={i}>\r\n          <img\r\n            src={`/ctr-${i + 1}.jpg`}\r\n            alt={\"Caretaker\"}\r\n            className={\r\n              picturePath === `ctr-${i + 1}.jpg`\r\n                ? \"type-image selected\"\r\n                : \"type-image\"\r\n            }\r\n            onClick={(e) => setPicturePath(`ctr-${i + 1}.jpg`)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const renderCityOptions = () => {\r\n    let array = [\r\n      <option key={-1} value={\"\"}>\r\n        Select your location\r\n      </option>,\r\n    ];\r\n    for (let i = 0; i < cityArray.length; i++) {\r\n      array.push(\r\n        <option key={i} value={cityArray[i]}>\r\n          {cityArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"login-form\"}>\r\n        <h1 className={\"login-text\"}>Pets would love their new caretaker.</h1>\r\n        <h4 className={\"radio-select\"}>\r\n          Please provide your additional details:\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter First Name\"}\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter Last Name\"}\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea  uk-form-width-large\"}\r\n            rows={\"5\"}\r\n            placeholder={\"Your Address\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            value={address}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n          >\r\n            {renderCityOptions()}\r\n          </select>\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"number\"}\r\n            placeholder={\"Whats your charge?\"}\r\n            onChange={(e) => setCharge(e.target.value)}\r\n            value={charge}\r\n          />\r\n        </div>\r\n        <h4 className={\"radio-select\"}>Your charges are:</h4>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setChargeDuration(e.target.value)}\r\n            value={chargeDuration}\r\n          >\r\n            <option value={\"hr\"}>Hourly</option>\r\n            <option value={\"day\"}>Daily</option>\r\n            <option value={\"week\"}>Weekly</option>\r\n            <option value={\"month\"}>Monthly</option>\r\n          </select>\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea uk-form-width-large\"}\r\n            rows={\"5\"}\r\n            placeholder={\"Tell us something about yourself\"}\r\n            onChange={(e) => setAbout(e.target.value)}\r\n            value={about}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4 className={\"radio-select\"}>Choose your Image:</h4>\r\n          <div\r\n            className={\"uk-grid-match uk-child-width-expand@s uk-text-center\"}\r\n            uk-grid={\"\"}\r\n          >\r\n            {renderCaretakerImages()}\r\n          </div>\r\n        </div>\r\n        <h4 className={\"signup-mssg\"}>\r\n          Changed your mind? {/* eslint-disable-next-line */}\r\n          <a className={\"signup-link\"} onClick={() => setFormType(\"User\")}>\r\n            Go Back\r\n          </a>\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <button\r\n            className={\"login-button\"}\r\n            onClick={(e) => handleSubmitClick(e)}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n        <h5 className={\"error-mssg\"}>{errorMessage}</h5>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CaretakerRegistrationForm;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AddNGOAPI } from \"../apis/NGO\";\r\nimport { UpdateUserById } from \"../apis/User\";\r\n\r\nconst NGORegistrationForm = (props) => {\r\n  const { user, setUser, setFormType } = props;\r\n\r\n  let userName = user === null ? \"\" : user.name;\r\n  let userPhone = user === null ? \"\" : user.phoneNumber;\r\n\r\n  const [name, setName] = useState(userName);\r\n  const [phoneNumber, setPhoneNumber] = useState(userPhone);\r\n  const [about, setAbout] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [upiId, setUpiId] = useState(\"\");\r\n  const [bankIFSC, setBankIFSC] = useState(\"\");\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [picturePath, setPicturePath] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  let cityArray = [\r\n    \"New Delhi\",\r\n    \"Kolkata\",\r\n    \"Bengaluru\",\r\n    \"Pune\",\r\n    \"Mumbai\",\r\n    \"Chennai\",\r\n    \"Hyderabad\",\r\n    \"Indore\",\r\n    \"Patna\",\r\n    \"Ranchi\",\r\n    \"Lucknow\",\r\n    \"Prayagraj\",\r\n    \"Ahmedabad\",\r\n    \"Agra\",\r\n    \"Kanpur\",\r\n    \"Jamshedpur\",\r\n    \"Srinagar\",\r\n    \"Gandhinagar\",\r\n    \"Thiruvananthapuram\",\r\n  ];\r\n\r\n  const handleSubmitClick = async (e) => {\r\n    if (\r\n      name === \"\" ||\r\n      phoneNumber === \"\" ||\r\n      location === \"\" ||\r\n      address === \"\" ||\r\n      about === \"\" ||\r\n      upiId === \"\" ||\r\n      bankIFSC === \"\" ||\r\n      accountNumber === \"\" ||\r\n      picturePath === \"\"\r\n    ) {\r\n      setErrorMessage(\"Please fill all required fields.\");\r\n    }\r\n    e.preventDefault();\r\n    let ngo = {\r\n      name,\r\n      phoneNumber,\r\n      about,\r\n      location,\r\n      address,\r\n      upiId,\r\n      bankIFSC,\r\n      accountNumber,\r\n      picturePath,\r\n    };\r\n    let loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n    await AddNGOAPI(ngo)\r\n      .then(async ({ data: createdNGO }) => {\r\n        loggedInUser = { ...loggedInUser, targetUser: createdNGO };\r\n        await UpdateUserById(\r\n          user.userId,\r\n          {\r\n            ...user,\r\n            targetUser: \"Caretaker\",\r\n            targetUserId: createdNGO.ngoId,\r\n          },\r\n          loggedInUser.token\r\n        )\r\n          .then(({ data: updatedUser }) => {\r\n            loggedInUser = { ...loggedInUser, user: updatedUser };\r\n            setUser(updatedUser);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Could not update user!\", error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Could not create caretaker\", error);\r\n      });\r\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(loggedInUser));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderNGOImages = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      array.push(\r\n        <div key={i}>\r\n          <img\r\n            src={`/ngo-${i + 1}.jpg`}\r\n            alt={\"NGO\"}\r\n            className={\r\n              picturePath === `ngo-${i + 1}.jpg`\r\n                ? \"type-image selected\"\r\n                : \"type-image\"\r\n            }\r\n            onClick={(e) => setPicturePath(`ngo-${i + 1}.jpg`)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const renderCityOptions = () => {\r\n    let array = [\r\n      <option key={-1} value={\"\"}>\r\n        Select your location\r\n      </option>,\r\n    ];\r\n    for (let i = 0; i < cityArray.length; i++) {\r\n      array.push(\r\n        <option key={i} value={cityArray[i]}>\r\n          {cityArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"login-form\"}>\r\n        <h1 className={\"login-text\"}>Animals love your contribution.</h1>\r\n        <h4 className={\"radio-select\"}>\r\n          Please provide your additional details:\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter NGO Name\"}\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"number\"}\r\n            placeholder={\"Enter NGO Number\"}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            value={phoneNumber}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea uk-form-width-large\"}\r\n            rows={\"5\"}\r\n            placeholder={\"Tell us something about yourself\"}\r\n            onChange={(e) => setAbout(e.target.value)}\r\n            value={about}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <textarea\r\n            className={\"uk-textarea uk-form-width-large\"}\r\n            rows={\"3\"}\r\n            placeholder={\"Enter your NGO Address\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            value={address}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <select\r\n            className={\"uk-select uk-form-width-large\"}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            value={location}\r\n          >\r\n            {renderCityOptions()}\r\n          </select>\r\n        </div>\r\n        <h4 className={\"radio-select\"}>Donation details:</h4>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"number\"}\r\n            placeholder={\"Enter NGO Account Number\"}\r\n            onChange={(e) => setAccountNumber(e.target.value)}\r\n            value={accountNumber}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter NGO Account IFSC\"}\r\n            onChange={(e) => setBankIFSC(e.target.value)}\r\n            value={bankIFSC}\r\n          />\r\n        </div>\r\n        <div className={\"uk-margin\"}>\r\n          <input\r\n            className={\"uk-input uk-form-width-large\"}\r\n            type={\"text\"}\r\n            placeholder={\"Enter NGO UPI ID\"}\r\n            onChange={(e) => setUpiId(e.target.value)}\r\n            value={upiId}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h4 className={\"radio-select\"}>Choose your Image:</h4>\r\n          <div\r\n            className={\"uk-grid-match uk-child-width-expand@s uk-text-center\"}\r\n            uk-grid={\"\"}\r\n          >\r\n            {renderNGOImages()}\r\n          </div>\r\n        </div>\r\n        <h4 className={\"signup-mssg\"}>\r\n          Changed your mind? {/* eslint-disable-next-line */}\r\n          <a className={\"signup-link\"} onClick={() => setFormType(\"User\")}>\r\n            Go Back\r\n          </a>\r\n        </h4>\r\n        <div className={\"uk-margin\"}>\r\n          <button\r\n            className={\"login-button\"}\r\n            onClick={(e) => handleSubmitClick(e)}\r\n          >\r\n            Register\r\n          </button>\r\n        </div>\r\n        <h5 className={\"error-mssg\"}>{errorMessage}</h5>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NGORegistrationForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Auth.css\";\r\nimport { SignUpAPI } from \"../apis/Auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DoctorRegistrationForm from \"./DoctorRegistration\";\r\nimport CaretakerRegistrationForm from \"./CaretakerRegistration\";\r\nimport NGORegistrationForm from \"./NGORegistration\";\r\n\r\nconst SignUp = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [formType, setFormType] = useState(\"User\");\r\n  const [picturePath, setPicturePath] = useState(\"pp-default.jpg\");\r\n  const history = useHistory();\r\n\r\n  const { user, setUser } = props;\r\n\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      if (user.userType === \"User\" || user?.targetUserId !== null) {\r\n        history.push(\"/\");\r\n      } else {\r\n        user && setFormType(user.userType);\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      email === \"\" ||\r\n      name === \"\" ||\r\n      password === \"\" ||\r\n      confirmPassword === \"\" ||\r\n      phoneNumber === \"\" ||\r\n      userType === \"\" ||\r\n      gender === \"\"\r\n    ) {\r\n      setErrorMessage(\"Please fill up all mandatory fields\");\r\n    } else if (password !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match!\");\r\n    } else {\r\n      let userToAdd = {\r\n        email,\r\n        name,\r\n        password,\r\n        confirmPassword,\r\n        phoneNumber,\r\n        userType,\r\n        gender,\r\n        picturePath,\r\n      };\r\n      await SignUpAPI(userToAdd)\r\n        .then(({ data }) => {\r\n          localStorage.setItem(\"loggedInUser\", JSON.stringify(data));\r\n          setUser(data.user);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderImageGrid = () => {\r\n    let array = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      array.push(\r\n        <img\r\n          key={i}\r\n          src={`/pp-${i + 1}.jpg`}\r\n          alt={\"PP\"}\r\n          className={\r\n            picturePath === `pp-${i + 1}.jpg`\r\n              ? \"uk-border-circle photo-selected\"\r\n              : \"uk-border-circle\"\r\n          }\r\n          onClick={(e) => setPicturePath(`pp-${i + 1}.jpg`)}\r\n        />\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const renderForm = () => {\r\n    switch (formType) {\r\n      case \"Doctor\":\r\n        return (\r\n          <DoctorRegistrationForm\r\n            user={user}\r\n            setUser={setUser}\r\n            setFormType={setFormType}\r\n          />\r\n        );\r\n\r\n      case \"Caretaker\":\r\n        return (\r\n          <CaretakerRegistrationForm\r\n            user={user}\r\n            setUser={setUser}\r\n            setFormType={setFormType}\r\n          />\r\n        );\r\n\r\n      case \"NGO\":\r\n        return (\r\n          <NGORegistrationForm\r\n            user={user}\r\n            setUser={setUser}\r\n            setFormType={setFormType}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <>\r\n                <div className={\"login-s-form\"}>\r\n                  <form>\r\n                  <h1 className={\"login-text\"}>Sign Up on Philozooic</h1>\r\n                    <div className={\"uk-margin\"}>\r\n                      <input\r\n                        className={\"uk-input uk-form-width-large\"}\r\n                        type={\"text\"}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        value={name}\r\n                        placeholder=\" \"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                      />\r\n                                <label for=\"name\" class=\"form_label\">Name</label>\r\n                    </div>\r\n                    <div className={\"uk-margin\"}>\r\n                      <input\r\n                        className={\"uk-input uk-form-width-large\"}\r\n                        type={\"email\"}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        value={email}\r\n                        placeholder=\" \"\r\n                        name=\"emails\"\r\n                        id=\"emails\"\r\n                      />\r\n                                <label for=\"emails\" class=\"form_label\">Email</label>\r\n                    </div>\r\n                    <div className={\"uk-margin\"}>\r\n                      <input\r\n                        className={\"uk-input uk-form-width-large\"}\r\n                        type={\"password\"}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        value={password}\r\n                        placeholder=\" \"\r\n                        name=\"passs\"\r\n                        id=\"passs\"\r\n                      />\r\n                                <label for=\"passs\" class=\"form_label\">Password</label>\r\n                    </div>\r\n                    <div className={\"uk-margin\"}>\r\n                      <input\r\n                        className={\"uk-input uk-form-width-large\"}\r\n                        type={\"password\"}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        value={confirmPassword}\r\n                        placeholder=\" \"\r\n                        name=\"repass\"\r\n                        id=\"repass\"\r\n                      />\r\n                                <label for=\"repass\" class=\"form_label\">Re-enter Password</label>\r\n                    </div>\r\n                    <div className={\"uk-margin\"}>\r\n                      <input\r\n                        className={\"uk-input uk-form-width-large\"}\r\n                        type={\"number\"}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        value={phoneNumber}\r\n                        placeholder=\" \"\r\n                        name=\"phonen\"\r\n                        id=\"phonen\"\r\n                      />\r\n                                <label for=\"phonen\" class=\"form_label\">Phone number</label>\r\n                    </div>\r\n                    <h4 className={\"radio-select\"}>\r\n                      Choose your Profile Type:\r\n                    </h4>\r\n                    <div\r\n                      className={\r\n                        \"uk-margin uk-grid-small uk-child-width-auto uk-grid radio-section\"\r\n                      }\r\n                      onChange={(e) => setUserType(e.target.value)}\r\n                    >\r\n                      <label>\r\n                        <input\r\n                          type={\"radio\"}\r\n                          value={\"Doctor\"}\r\n                          name={\"userType\"}\r\n                        />\r\n                        Doctor\r\n                      </label>\r\n                      <label>\r\n                        <input\r\n                          type={\"radio\"}\r\n                          value={\"Caretaker\"}\r\n                          name={\"userType\"}\r\n                        />\r\n                        Caretaker\r\n                      </label>\r\n                      <label>\r\n                        <input type={\"radio\"} value={\"NGO\"} name={\"userType\"} />\r\n                        NGO\r\n                      </label>\r\n                      <label>\r\n                        <input\r\n                          type={\"radio\"}\r\n                          value={\"User\"}\r\n                          name={\"userType\"}\r\n                        />\r\n                        User\r\n                      </label>\r\n                    </div>\r\n                    <h4 className={\"radio-select\"}>Choose Your Gender:</h4>\r\n                    <div\r\n                      className={\r\n                        \"uk-margin uk-grid-small uk-child-width-auto uk-grid radio-section\"\r\n                      }\r\n                      onChange={(e) => setGender(e.target.value)}\r\n                    >\r\n                      <label>\r\n                        <input type={\"radio\"} value={\"Male\"} name={\"gender\"} />\r\n                        Male\r\n                      </label>\r\n                      <label>\r\n                        <input\r\n                          type={\"radio\"}\r\n                          value={\"Female\"}\r\n                          name={\"gender\"}\r\n                        />\r\n                        Female\r\n                      </label>\r\n                    </div>\r\n                    <h5 className={\"error-mssg\"}>{errorMessage}</h5>\r\n                    <button\r\n                          className={\"login-button\"}\r\n                          onClick={(e) => handleClick(e)}\r\n                        >\r\n                          {userType === \"\" || userType === \"User\"\r\n                            ? \"SignUp\"\r\n                            : \"Next\"}\r\n                        </button>\r\n                        <div className={\"uk-margin\"}>\r\n                      </div>\r\n                    <div className={\"desktop-signup-section\"}>\r\n                      <h4 className={\"signup-mssg\"}>\r\n                        Already have an account?{\" \"}<br></br>                      </h4>\r\n                        <Link className={\"login-button\"} to=\"/login\">\r\n                          Login\r\n                        </Link>\r\n                    \r\n                      <div className={\"uk-margin\"}>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n          </>\r\n        );\r\n    }\r\n  };\r\n\r\n  return renderForm();\r\n};\r\n\r\nexport default SignUp;\r\n"],"names":["LoginAPI","async","email","password","Axios","post","SignUpAPI","user","AddCaretakerAPI","caretaker","GetCaretakerByIdAPI","get","concat","caretakerId","GetCaretakersByAvgReview","locationArray","UpdateCaretakerByIdAPI","caretakerAfterUpdate","put","AddDoctorAPI","doctor","GetDoctorById","doctorId","GetDoctorsByAvgReview","UpdateDoctorById","doctorAfterUpdate","AddNGOAPI","ngo","GetNGOByIdAPI","ngoId","GetNGOsByAvgReviewAPI","UpdateNGOByIdAPI","ngoAfterUpdate","GetUserById","userId","GetUserByTargetUserIdAPI","targetUserId","UpdateUserById","userAfterUpdate","token","props","setUser","setFormType","userNameArray","name","split","firstName","setFirstName","useState","lastName","setLastName","location","setLocation","specialty","setSpecialty","charge","setCharge","chargeDuration","setChargeDuration","about","setAbout","errorMessage","setErrorMessage","picturePath","setPicturePath","address","setAddress","history","useHistory","cityArray","_jsx","_Fragment","children","_jsxs","className","type","placeholder","onChange","e","target","value","rows","renderCityOptions","array","i","length","push","renderDoctorImages","src","alt","onClick","preventDefault","loggedInUser","JSON","parse","localStorage","getItem","then","data","createdDoctor","_ref","targetUser","_ref2","updatedUser","catch","error","console","setItem","stringify","handleSubmitClick","renderCaretakerImages","createdCaretaker","userName","userPhone","phoneNumber","setName","setPhoneNumber","upiId","setUpiId","bankIFSC","setBankIFSC","accountNumber","setAccountNumber","renderNGOImages","createdNGO","setEmail","setPassword","confirmPassword","setConfirmPassword","userType","setUserType","gender","setGender","formType","useEffect","renderForm","DoctorRegistrationForm","CaretakerRegistrationForm","NGORegistrationForm","id","for","class","userToAdd","handleClick","Link","to"],"sourceRoot":""}