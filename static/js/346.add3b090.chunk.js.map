{"version":3,"file":"static/js/346.add3b090.chunk.js","mappings":"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","sources":["apis/Doctor.js","components/AllDoctorPage.js"],"sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const AddDoctorAPI = async (doctor) => {\r\n  return await Axios.post(\"/doctor\", doctor);\r\n};\r\n\r\nexport const GetAllDoctors = async () => {\r\n  return await Axios.get(\"/doctor/get/all\");\r\n};\r\n\r\nexport const GetDoctorById = async (doctorId) => {\r\n  return await Axios.get(`/doctor/${doctorId}`);\r\n};\r\n\r\nexport const GetDoctorsByAvgReview = async (locationArray, doctorId) => {\r\n  return await Axios.post(\"/doctor/get/review\", { locationArray, doctorId });\r\n};\r\n\r\nexport const UpdateDoctorById = async (doctorId, doctorAfterUpdate) => {\r\n  return await Axios.put(`/doctor/${doctorId}`, doctorAfterUpdate);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport \"../css/AllPage.css\";\r\nimport { GetDoctorsByAvgReview } from \"../apis/Doctor\";\r\n\r\nlet locationSet = new Set();\r\nlet locationToSearchSet = new Set();\r\n\r\nconst AllDoctorPage = () => {\r\n  const [doctorList, setDoctorList] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(true);\r\n  const [fetchMessage, setFetchMessage] = useState({});\r\n\r\n  const fetchDoctorsByLocation = async (locationArray) => {\r\n    await GetDoctorsByAvgReview(locationArray)\r\n      .then(({ data: foundDoctors }) => {\r\n        setDoctorList(foundDoctors);\r\n        setFetchMessage({\r\n          success: true,\r\n          message: \"Doctors were successfully fetched.\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 404) {\r\n          setFetchMessage({\r\n            success: false,\r\n            message: \"404! No doctors have registered yet.\",\r\n          });\r\n          setDoctorList([]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const setLocationToSearchSet = (e) => {\r\n    let { value, checked } = e.target;\r\n    if (checked) {\r\n      locationToSearchSet.add(value);\r\n      console.log(locationToSearchSet);\r\n      fetchDoctorsByLocation([...locationToSearchSet]);\r\n    } else if (locationToSearchSet.has(value)) {\r\n      locationToSearchSet.delete(value);\r\n      fetchDoctorsByLocation([...locationToSearchSet]);\r\n    }\r\n  };\r\n\r\n  const numberFormatter = new Intl.NumberFormat(\"en-IN\");\r\n\r\n  const currencyFormatter = new Intl.NumberFormat(\"en-IN\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchDoctorsByLocation([]);\r\n  }, []);\r\n\r\n  const renderLocationCheckboxes = () => {\r\n    return [...locationSet].map((location, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <label>\r\n            <input\r\n              className={\"uk-checkbox\"}\r\n              type={\"checkbox\"}\r\n              value={location}\r\n              onChange={(e) => setLocationToSearchSet(e)}\r\n            />\r\n            {` ${location}`}\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderDoctorCards = () => {\r\n    if (doctorList.length === 0) {\r\n      return <span uk-spinner={\"ratio: 4.5\"} />;\r\n    }\r\n    return doctorList.map((doctor) => {\r\n      locationSet.add(doctor.location);\r\n      return (\r\n        <div key={doctor.doctorId}>\r\n          <div className={\"uk-card uk-card-default uk-card-hover\"}>\r\n            {doctor.reviewAvg > 4 && (\r\n              <div className={\"uk-card-badge uk-label label\"}>Highly Rated</div>\r\n            )}\r\n            <div className={\"uk-card-media-top\"}>\r\n              <img\r\n                className={\"card-image\"}\r\n                src={`/${doctor.picturePath}`}\r\n                alt={`Veterinary Doctor: ${doctor.firstName} ${doctor.lastName}`}\r\n                title={`Veterinary Doctor: ${doctor.firstName} ${doctor.lastName}`}\r\n              />\r\n            </div>\r\n            <div className={\"uk-card-body card-body\"}>\r\n              <h3 className={\"uk-card-title name\"}>\r\n                Dr. {doctor.firstName} {doctor.lastName}\r\n              </h3>\r\n              <h4 className={\"charge-box\"}>\r\n                {currencyFormatter.format(doctor.charge)}/\r\n                {doctor.chargeDuration}\r\n              </h4>\r\n              <h6 className={\"miscellaneous-info\"}>\r\n                Location: {doctor.location}\r\n              </h6>\r\n              <h6 className={\"miscellaneous-info\"}>\r\n                Specialty: {doctor.specialty}\r\n              </h6>\r\n              <div className={\"star-section\"}>\r\n                <StarRatings\r\n                  rating={Number(doctor.reviewAvg)}\r\n                  starDimension={\"20px\"}\r\n                />\r\n              </div>\r\n              <div>\r\n                <small className={\"review-box\"}>\r\n                  {doctor.reviewAvg?.toFixed(3)} (\r\n                  {numberFormatter.format(doctor.reviewCount)} review\r\n                  {(doctor.reviewCount === 0 || doctor.reviewCount > 1) && \"s\"})\r\n                </small>\r\n              </div>\r\n              <p className={\"about-box\"}>{doctor.about}</p>\r\n              <div className={\"button-box\"}>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/doctor/${doctor.doctorId}`,\r\n                    state: {\r\n                      tempDoctor: doctor,\r\n                    },\r\n                  }}\r\n                >\r\n                  <button className={\"section-button\"}>Visit</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"uk-section hero-section\"}>\r\n        <div className={\"uk-container\"}>\r\n          <h1 className={\"hero-heading-text\"}>Veterinary Doctors</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div uk-grid={\"\"} className={\"section all-page-grid\"}>\r\n        <div className={\"uk-width-1-4@l\"}>\r\n          <div className={\"location-filter-section\"}>\r\n            <h6>\r\n              Filter by location:\r\n              <span\r\n                uk-icon={\"icon: chevron-down\"}\r\n                className={\"collapse-icon\"}\r\n                onClick={(e) => setShowFilter(!showFilter)}\r\n                style={showFilter ? { transform: \"rotate(180deg)\" } : {}}\r\n              />\r\n            </h6>\r\n            {showFilter && renderLocationCheckboxes()}\r\n          </div>\r\n        </div>\r\n        <div className={\"uk-width-3-4@l all-page-card-section\"}>\r\n          {(() => {\r\n            if (Object.keys(fetchMessage).length === 0) {\r\n              return <span uk-spinner={\"ratio: 4.5\"} />;\r\n            } else if (!fetchMessage.success) {\r\n              return (\r\n                <p className={\"not-found-message\"}>{fetchMessage.message}</p>\r\n              );\r\n            } else {\r\n              return (\r\n                <div\r\n                  className={\"uk-child-width-1-3@l uk-grid-match all-page-grid\"}\r\n                  uk-grid={\"\"}\r\n                >\r\n                  {renderDoctorCards()}\r\n                </div>\r\n              );\r\n            }\r\n          })()}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllDoctorPage;\r\n"],"names":["AddDoctorAPI","async","Axios","post","doctor","GetDoctorById","get","concat","doctorId","GetDoctorsByAvgReview","locationArray","UpdateDoctorById","doctorAfterUpdate","put","locationSet","Set","locationToSearchSet","AllDoctorPage","doctorList","setDoctorList","useState","showFilter","setShowFilter","fetchMessage","setFetchMessage","fetchDoctorsByLocation","then","_ref","data","foundDoctors","success","message","catch","error","response","status","numberFormatter","Intl","NumberFormat","currencyFormatter","style","currency","useEffect","_jsxs","_Fragment","children","_jsx","className","onClick","e","transform","map","location","index","type","value","onChange","checked","target","add","console","log","has","delete","setLocationToSearchSet","Object","keys","length","_doctor$reviewAvg","reviewAvg","src","picturePath","alt","firstName","lastName","title","format","charge","chargeDuration","specialty","StarRatings","rating","Number","starDimension","toFixed","reviewCount","about","Link","to","pathname","state","tempDoctor"],"sourceRoot":""}