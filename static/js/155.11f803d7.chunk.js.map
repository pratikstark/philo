{"version":3,"file":"static/js/155.11f803d7.chunk.js","mappings":"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","sources":["apis/Pet.js","components/AllDateAndMatePage.js"],"sourcesContent":["import Axios from \"axios\";\r\n\r\nexport const AddPetAPI = async (pet) => {\r\n  return await Axios.post(\"/pet\", pet);\r\n};\r\n\r\nexport const GetPetByIdAPI = async (petId) => {\r\n  return await Axios.get(`/pet/${petId}`);\r\n};\r\n\r\nexport const GetPetsByOwnerIdAPI = async (ownerId) => {\r\n  return await Axios.get(`/pet/by_owner/${ownerId}`);\r\n};\r\n\r\nexport const GetPetsByAvgReviewsAPI = async (locationArray, mateStatus, petId) => {\r\n  return await Axios.post(\r\n    \"/pet/get/review\",\r\n    { locationArray, petId },\r\n    { params: { mateStatus } }\r\n  );\r\n};\r\n\r\nexport const UpdatePetByIdAPI = async (petId, pet) => {\r\n  return await Axios.put(`/pet/${petId}`, pet);\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/AllPage.css\";\r\nimport \"../css/General.css\";\r\nimport { GetPetsByAvgReviewsAPI } from \"../apis/Pet\";\r\n\r\nlet locationSet = new Set();\r\nlet locationToSearchSet = new Set();\r\nlet mateStatusToSearch;\r\n\r\nconst AllDateAndMatePage = () => {\r\n  const [petList, setPetList] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(true);\r\n  const [fetchMessage, setFetchMessage] = useState({});\r\n\r\n  const fetchPetsByLocation = async (locationArray, mateStatusBoolean) => {\r\n    await GetPetsByAvgReviewsAPI(locationArray, mateStatusBoolean)\r\n      .then(({ data: foundPets }) => {\r\n        setPetList(foundPets);\r\n        setFetchMessage({\r\n          success: true,\r\n          message: \"Pets were found with the given filters!\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 404) {\r\n          setFetchMessage({\r\n            success: false,\r\n            message: \"404: No pets were found with the given filters!\",\r\n          });\r\n          setPetList([]);\r\n        }\r\n      });\r\n  };\r\n\r\n  const setLocationToSearchSet = (e) => {\r\n    let { value, checked } = e.target;\r\n    if (checked) {\r\n      locationToSearchSet.add(value);\r\n      console.log(locationToSearchSet);\r\n      fetchPetsByLocation([...locationToSearchSet], mateStatusToSearch);\r\n    } else if (locationToSearchSet.has(value)) {\r\n      locationToSearchSet.delete(value);\r\n      fetchPetsByLocation([...locationToSearchSet], mateStatusToSearch);\r\n    }\r\n  };\r\n\r\n  const setMateStatusToSearch = (e) => {\r\n    let { value, checked } = e.target;\r\n    if (checked) {\r\n      mateStatusToSearch = value === \"true\";\r\n    } else {\r\n      mateStatusToSearch = undefined;\r\n    }\r\n    fetchPetsByLocation([...locationToSearchSet], mateStatusToSearch);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Pets for Date & Mate | Philozooic\";\r\n    fetchPetsByLocation([]);\r\n  }, []);\r\n\r\n  const renderLocationCheckboxes = () => {\r\n    return (\r\n      <>\r\n        <legend>Location:</legend>\r\n        {[...locationSet].map((location) => {\r\n          return (\r\n            <div>\r\n              <label>\r\n                <input\r\n                  className={\"uk-checkbox\"}\r\n                  type={\"checkbox\"}\r\n                  value={location}\r\n                  onChange={(e) => setLocationToSearchSet(e)}\r\n                />\r\n                {` ${location}`}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n        <br />\r\n        <legend>Mate Status:</legend>\r\n        <div onClick={(e) => setMateStatusToSearch(e)}>\r\n          <div>\r\n            <label>\r\n              <input\r\n                className={\"uk-radio\"}\r\n                type={\"radio\"}\r\n                value={true}\r\n                name={\"mateStatus\"}\r\n              />\r\n              {\" Available\"}\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <input\r\n                className={\"uk-radio\"}\r\n                type={\"radio\"}\r\n                value={false}\r\n                name={\"mateStatus\"}\r\n              />\r\n              {\" Unavailable\"}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderPetCards = () => {\r\n    if (Object.keys(fetchMessage).length === 0) {\r\n      return <span uk-spinner={\"ratio: 4.5\"} />;\r\n    } else if (!fetchMessage.success) {\r\n      return <p className={\"not-found-message\"}>{fetchMessage.message}</p>;\r\n    }\r\n    return (\r\n      <div className={\"uk-child-width-1-3@l uk-grid-match all-page-grid\"} uk-grid={\"\"}>\r\n        {petList.map((pet) => {\r\n          locationSet.add(pet.location);\r\n          return (\r\n            <div key={pet.petId}>\r\n              <div className={\"uk-card uk-card-default uk-card-hover\"}>\r\n                {pet.reviewAvg > 4 && (\r\n                  <div className={\"uk-card-badge uk-label label\"}>\r\n                    Highly Rated\r\n                  </div>\r\n                )}\r\n                <div className={\"uk-card-media-top\"}>\r\n                  <img\r\n                    className={\"card-image\"}\r\n                    src={`/${pet.picturePath}`}\r\n                    alt={`Pet: ${pet.animalType} ${pet.breed}`}\r\n                    title={`Pet: ${pet.animalType} ${pet.breed}`}\r\n                  />\r\n                </div>\r\n                <div className={\"uk-card-body card-body\"}>\r\n                  <h3 className={\"uk-card-title name\"}>\r\n                    {pet.animalType} ({pet.breed})\r\n                  </h3>\r\n                  <h6 className={\"miscellaneous-info\"}>\r\n                    Location: {pet.location}\r\n                  </h6>\r\n                  <h6 className={\"miscellaneous-info\"}>\r\n                    {pet.mateStatus\r\n                      ? \"Available to Mate\"\r\n                      : \"Unavailable to Mate\"}\r\n                  </h6>\r\n                  <small className={\"review-box\"}>\r\n                    {pet.reviewAvg} ({pet.reviewCount} review\r\n                    {(pet.reviewCount === 0 || pet.reviewCount > 1) && \"s\"})\r\n                  </small>\r\n                  <br />\r\n                  <div className={\"button-box\"}>\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/date-mate/${pet.petId}`,\r\n                        state: {\r\n                          tempPet: pet,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <button className={\"section-button\"}>Visit</button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={\"uk-section hero-section\"}>\r\n        <div className={\"uk-container\"}>\r\n          <h1 className={\"hero-heading-text\"}>Pets for date</h1>\r\n        </div>\r\n      </div>\r\n      <div uk-grid={\"\"} className={\"section all-page-grid\"}>\r\n        <div className={\"uk-width-1-4@l\"}>\r\n          <div className={\"location-filter-section\"}>\r\n            <h6>\r\n              Filter:\r\n              <span\r\n                uk-icon={\"icon: chevron-down\"}\r\n                className={\"collapse-icon\"}\r\n                onClick={(e) => setShowFilter(!showFilter)}\r\n                style={showFilter ? { transform: \"rotate(180deg)\" } : {}}\r\n              />\r\n            </h6>\r\n            {showFilter && renderLocationCheckboxes()}\r\n          </div>\r\n        </div>\r\n        <div className={\"uk-width-3-4@l all-page-card-section\"}>\r\n          {renderPetCards()}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllDateAndMatePage;\r\n"],"names":["AddPetAPI","async","Axios","post","pet","GetPetByIdAPI","get","concat","petId","GetPetsByOwnerIdAPI","ownerId","GetPetsByAvgReviewsAPI","locationArray","mateStatus","params","UpdatePetByIdAPI","put","mateStatusToSearch","locationSet","Set","locationToSearchSet","AllDateAndMatePage","petList","setPetList","useState","showFilter","setShowFilter","fetchMessage","setFetchMessage","fetchPetsByLocation","mateStatusBoolean","then","_ref","data","foundPets","success","message","catch","error","response","status","useEffect","document","title","_jsxs","_Fragment","children","_jsx","className","onClick","e","style","transform","map","location","type","value","onChange","checked","target","add","console","log","has","delete","setLocationToSearchSet","undefined","setMateStatusToSearch","name","Object","keys","length","reviewAvg","src","picturePath","alt","animalType","breed","reviewCount","Link","to","pathname","state","tempPet"],"sourceRoot":""}